using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'legoBlocks' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER m
     */

    public static int legoBlocks(int n, int m)
    {
        const int MOD = 1000000007;
        long[] singleRow = new long[m + 1];
        long[] total = new long[m + 1];
        long[] stable = new long[m + 1];

        singleRow[0] = 1;

        for (int i = 1; i <= m; i++)
        {
            singleRow[i] = 0;
            for (int j = 1; j <= 4 && j <= i; j++)
            {
                singleRow[i] = (singleRow[i] + singleRow[i - j]) % MOD;
            }
        }

        for (int i = 1; i <= m; i++)
        {
            total[i] = 1;
            for (int j = 0; j < n; j++)
            {
                total[i] = (total[i] * singleRow[i]) % MOD;
            }
        }

        for (int i = 1; i <= m; i++)
        {
            long unstable = 0;
            for (int j = 1; j < i; j++)
            {
                unstable = (unstable + (stable[j] * total[i - j]) % MOD) % MOD;
            }
            stable[i] = (total[i] - unstable + MOD) % MOD;
        }

        return (int)stable[m];
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int t = Convert.ToInt32(Console.ReadLine().Trim());

        for (int tItr = 0; tItr < t; tItr++)
        {
            string[] firstMultipleInput = Console.ReadLine().TrimEnd().Split(' ');

            int n = Convert.ToInt32(firstMultipleInput[0]);

            int m = Convert.ToInt32(firstMultipleInput[1]);

            int result = Result.legoBlocks(n, m);

            textWriter.WriteLine(result);
        }

        textWriter.Flush();
        textWriter.Close();
    }
}
