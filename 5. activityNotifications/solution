using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'activityNotifications' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY expenditure
     *  2. INTEGER d
     */

    public static int activityNotifications(List<int> expenditure, int d)
    {
        int notifications = 0;
        int[] freq = new int[201];

        for (int i = 0; i < d; i++)
            freq[expenditure[i]]++;

        for (int i = d; i < expenditure.Count; i++)
        {
            double median = GetMedian(freq, d);

            if (expenditure[i] >= 2 * median)
                notifications++;

            freq[expenditure[i - d]]--;
            freq[expenditure[i]]++;
        }

        return notifications;
    }

    private static double GetMedian(int[] freq, int d)
    {
        int count = 0;
        int m1 = 0, m2 = 0;

        if (d % 2 == 1)
        {
            for (int i = 0; i < freq.Length; i++)
            {
                count += freq[i];
                if (count > d / 2)
                    return i;
            }
        }
        else
        {
            for (int i = 0; i < freq.Length; i++)
            {
                count += freq[i];
                if (m1 == 0 && count >= d / 2)
                    m1 = i;
                if (count >= (d / 2) + 1)
                {
                    m2 = i;
                    break;
                }
            }
            return (m1 + m2) / 2.0;
        }
        return 0;
    }   

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string[] firstMultipleInput = Console.ReadLine().TrimEnd().Split(' ');

        int n = Convert.ToInt32(firstMultipleInput[0]);

        int d = Convert.ToInt32(firstMultipleInput[1]);

        List<int> expenditure = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(expenditureTemp => Convert.ToInt32(expenditureTemp)).ToList();

        int result = Result.activityNotifications(expenditure, d);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
